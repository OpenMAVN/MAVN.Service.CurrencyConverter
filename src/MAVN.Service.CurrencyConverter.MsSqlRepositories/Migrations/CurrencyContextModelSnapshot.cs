// <auto-generated />
using System;
using MAVN.Service.CurrencyConverter.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MAVN.Service.CurrencyConverter.MsSqlRepositories.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    partial class CurrencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("currency")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MAVN.Service.CurrencyConverter.MsSqlRepositories.Entities.CurrencyRateEntity", b =>
                {
                    b.Property<string>("BaseAsset")
                        .HasColumnName("base_asset")
                        .HasColumnType("text");

                    b.Property<string>("QuoteAsset")
                        .HasColumnName("quote_asset")
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnName("rate")
                        .HasColumnType("numeric");

                    b.HasKey("BaseAsset", "QuoteAsset");

                    b.ToTable("currency_rates");

                    b.HasData(
                        new
                        {
                            BaseAsset = "AED",
                            QuoteAsset = "USD",
                            Rate = 0.3061m
                        });
                });

            modelBuilder.Entity("MAVN.Service.CurrencyConverter.MsSqlRepositories.Entities.GlobalCurrencyRateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmountInCurrency")
                        .HasColumnName("amount_in_currency")
                        .HasColumnType("numeric");

                    b.Property<string>("AmountInTokens")
                        .IsRequired()
                        .HasColumnName("amount_in_tokens")
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("global_currency_rates");
                });
#pragma warning restore 612, 618
        }
    }
}
